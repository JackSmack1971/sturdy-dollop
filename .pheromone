{
  "swarmConfig": {
    "pheromoneFile": ".pheromone",
    "evaporationRates": {
      "state": 0.02,
      "need": 0.08,
      "problem": 0.05,
      "priority": 0.04,
      "dependency": 0.01,
      "anticipatory": 0.15
    },
    "explorationRate": 0.05,
    "signalPruneThreshold": 0.1,
    "amplificationRules": {
      "repeatedSignalBoost": 1.3,
      "maxAmplification": 4.0
    },
    "signalCategories": {
      "state": ["project_initialization_complete", "framework_scaffolding_complete", "test_plan_complete_for_feature_X", "tests_implemented_for_feature_X", "coding_complete_for_feature_X", "integration_complete_for_features_XYZ", "system_validation_complete", "feature_overview_spec_created", "architecture_defined_for_module_X", "debug_fix_proposed_for_feature_X", "debug_analysis_complete_for_feature_X", "feature_code_merged_successfully", "security_review_passed_for_module", "module_performance_optimized", "documentation_updated_for_feature_X", "deployment_successful_to_env", "iac_apply_successful", "ci_pipeline_triggered", "coding_attempt_complete_for_feature", "reproducing_test_created_for_bug", "integration_step_successful_for_feature_X"],
      "need": ["project_initialization_needed", "framework_scaffolding_needed", "feature_definition_complete_for_X", "test_planning_needed_for_feature_X", "test_implementation_needed_for_feature_X", "coding_needed_for_feature_X", "integration_needed_for_features_XYZ", "system_validation_needed"],
      "problem": ["critical_bug_in_feature_X", "system_level_bug_detected", "integration_conflict_on_merge_ABC", "security_vulnerability_found_in_M", "performance_bottleneck_in_N", "problem_research_blocker_identified", "mcp_tool_execution_failed", "deployment_failed_to_env", "feature_test_run_failed", "coding_attempt_resulted_in_test_failure", "performance_optimization_ineffective_or_problematic", "test_flaky"],
      "priority": ["prioritize_feature_X_development", "halt_feature_Y_pending_review", "change_request_received_for_Y"],
      "dependency": ["feature_X_depends_on_feature_Y", "component_A_depends_on_component_B"],
      "anticipatory": ["anticipate_integration_soon_for_feature_X", "anticipate_coding_soon_for_feature_X", "anticipate_testing_soon_for_feature_Y"]
    },
    "signalPriorities": {
      "default": 1.0,
      "critical_bug_in_feature_X": 2.5,
      "system_level_bug_detected": 3.0,
      "security_vulnerability_found_in_M": 2.7,
      "performance_bottleneck_in_N": 1.8,
      "integration_conflict_on_merge_ABC": 2.2,
      "halt_feature_Y_pending_review": 2.6,
      "change_request_received_for_Y": 1.7,
      "prioritize_feature_X_development": 1.5,
      "project_initialization_needed": 1.2,
      "framework_scaffolding_needed": 1.1
    },
    "dependencySignals": {
      "featureDependencies": true,
      "componentDependencies": true,
      "criticalPathTracking": true
    },
    "conflictResolution": {
      "strategy": "highest_priority_first",
      "tiebreakers": ["signal_strength", "signal_age", "minimal_context_switching"]
    },
    "anticipatorySignals": {
      "enabled": true,
      "lookAheadSteps": 2,
      "threshold": 0.7
    },
    "analyticsTracking": {
      "enabled": true,
      "historyLength": 20,
      "bottleneckDetection": true,
      "oscillationDetection": true
    },
    "emergencyThresholds": {
      "security_vulnerability_found_in_M": 7.0,
      "critical_bug_in_feature_X": 8.0,
      "system_level_bug_detected": 9.0
    },
    "recruitmentThresholds": {
      "Debugger_Targeted": {
        "critical_bug_in_feature_X": 6.0,
        "system_level_bug_detected": 8.0
      },
      "SecurityReviewer_Module": {
        "security_vulnerability_found_in_M": 4.0
      },
      "Optimizer_Module": {
        "performance_bottleneck_in_N": 5.0
      },
      "Integrator_Module": {
        "integration_conflict_on_merge_ABC": 5.5
      }
    },
    "signalTypes": ["project_initialization_complete", "framework_scaffolding_complete", "test_plan_complete_for_feature_X", "tests_implemented_for_feature_X", "coding_complete_for_feature_X", "integration_complete_for_features_XYZ", "system_validation_complete", "feature_overview_spec_created", "architecture_defined_for_module_X", "debug_fix_proposed_for_feature_X", "debug_analysis_complete_for_feature_X", "feature_code_merged_successfully", "security_review_passed_for_module", "module_performance_optimized", "documentation_updated_for_feature_X", "deployment_successful_to_env", "iac_apply_successful", "ci_pipeline_triggered", "coding_attempt_complete_for_feature", "reproducing_test_created_for_bug", "integration_step_successful_for_feature_X", "project_initialization_needed", "framework_scaffolding_needed", "feature_definition_complete_for_X", "test_planning_needed_for_feature_X", "test_implementation_needed_for_feature_X", "coding_needed_for_feature_X", "integration_needed_for_features_XYZ", "system_validation_needed", "critical_bug_in_feature_X", "system_level_bug_detected", "integration_conflict_on_merge_ABC", "security_vulnerability_found_in_M", "performance_bottleneck_in_N", "problem_research_blocker_identified", "mcp_tool_execution_failed", "deployment_failed_to_env", "feature_test_run_failed", "coding_attempt_resulted_in_test_failure", "performance_optimization_ineffective_or_problematic", "prioritize_feature_X_development", "halt_feature_Y_pending_review", "change_request_received_for_Y", "feature_X_depends_on_feature_Y", "component_A_depends_on_component_B", "anticipate_integration_soon_for_feature_X", "anticipate_coding_soon_for_feature_X", "anticipate_testing_soon_for_feature_Y", "test_flaky"],
    "interpretationLogic": {
      "semanticMappings": {
        "specification for": "feature_spec_complete",
        "coding complete": "coding_complete",
        "unit tests passing": "tests_implemented",
        "ready for integration": "integration_pending",
        "critical bug": "critical_bug_found",
        "tests are flaky": "test_flaky",
        "awaiting review": "review_required",
        "ready for system validation": "system_ready_for_validation",
        "blocked by": "blocker_detected"
      },
      "regexExtraction": {
        "featureTargets": "(?:for|of) '([^']+)'",
        "specPaths": "(docs/specs/[\w\-]+\.md)"
      },
      "signalTemplates": {
        "feature_spec_complete": {
          "category": "state",
          "strength": 7.5,
          "messageTemplate": "Spec complete for {target}",
          "dataFields": ["specPaths"]
        },
        "coding_complete": {
          "category": "state",
          "strength": 8.0,
          "messageTemplate": "Coding complete for {target}",
          "dataFields": ["featureTargets"]
        },
        "tests_implemented": {
          "category": "state",
          "strength": 8.0,
          "messageTemplate": "Unit tests passing for {target}",
          "dataFields": ["featureTargets"]
        },
        "critical_bug_found": {
          "category": "problem",
          "strength": 9.0,
          "messageTemplate": "Critical bug found in {target}",
          "dataFields": ["featureTargets"]
        },
        "test_flaky": {
          "category": "problem",
          "strength": 6.5,
          "messageTemplate": "Tests are flaky for {target}",
          "dataFields": ["featureTargets"]
        }
      }
    }
  },
  "signals": []
}
